/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ChessGame.gui;

import ChessGame.model.ChessBoard;
import ChessGame.model.Chess;
import ChessGame.model.Piece;
import ChessGame.model.Position;
import ChessGame.model.Square;
import java.awt.Component;
import java.awt.GridBagLayout;
import java.awt.GridLayout;

/**
 *
 * @author Richard Johnston ID 0795795
 * @version 1.0 - 2015.05: Created
 */
public class ChessBoardUI extends javax.swing.JFrame {
    
    private Chess       chess;
    private ChessBoard  board;
    private SquareGrid  csSquareGrid;
    private Square [][] squares;
    
    /**
     * Creates new form ChessBoardUI
     */
    public ChessBoardUI(Chess game) {
        
        this.chess = game;
        
        initComponents();
        createChessBoardGrid();
                
        csSquareGrid = new SquareGrid(chess, 0, 0);
        csSquare.add(csSquareGrid);
        
        update();
        
    }
    
    public void update()
    {
        
        for ( Component component : csSquare.getComponents() )
        {
            SquareGrid gsp = (SquareGrid) component;
            gsp.update();
        }
        
        csSquareGrid.update();
    }
    
    public void movePiece()
    {
        int rowNo = 1;
        int colNo = 1;
        int newRowNo = 2;
        int newColNo = 1;
        
        ChessBoard cBoard = chess.getChessBoard();
        squares = cBoard.getSquareArray();
        
        Position piecePos = new Position(cBoard, rowNo, colNo);
        Piece p = cBoard.getSquare(piecePos).getOccupyingPiece();
        System.out.println("Piece: " + p + " | Position: " + piecePos + " | Row: " + rowNo + " | Column: " + colNo + " | cBoard: " + cBoard);
        chess.movePiece(squares[rowNo][colNo], squares[newRowNo][newColNo], p);
 
        update();
    }
    
    private void createChessBoardGrid()
    {
        board = new ChessBoard();
        
        int rows    = board.getNumRows();
        int columns = board.getNumColumns();
        
        csSquare.removeAll();
        csSquare.setLayout(new GridLayout(rows, columns));
        
        for ( int row = 0; row < 8; row++ )
        {
            for ( int col = 0; col < 8; col++ )
            {
                SquareGrid panel = new SquareGrid(chess, row, col);
                csSquare.add(panel);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        csSquare = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        csSquare.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        csSquare.setPreferredSize(new java.awt.Dimension(500, 400));
        csSquare.setLayout(new java.awt.CardLayout());
        getContentPane().add(csSquare, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel csSquare;
    // End of variables declaration//GEN-END:variables
}
